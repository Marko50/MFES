class Date
types
-- TODO Define types here
values
-- TODO Define values here
instance variables
-- TODO Define instance variables here
	private day : nat;
	private month : nat;
	private year : nat;
	
operations
-- TODO Define operations here
	public Date: nat * nat * nat ==> Date
	Date(d,m,y) == (
		day := d;
	 	month:=m; 
	 	year:=y; 
	 	return self
	);
	
	public checkValid : nat * nat * nat ==> bool
	checkValid(d, m, y) == (
		if y < 2019 then
			return false;
		if (m < 1 or m > 12) then
			return false;
		if d < 1 then
			return false;
		if (m = 2) then (
			if isLeapYear(y) then (
				if d > 29 then
					return false;
			)
			else if d > 28 then
				return false;
		)
		else if (m = 4 or m = 6 or m = 9 or m = 11) then (
			if d > 30 then
				return false;
		)
		else if d > 31 then
			return false;
				
		return true;
	);
	
	public isLeapYear : nat ==> bool
	isLeapYear (y) == (
		return y mod 4 = 0 and y mod 100 <> 0 or y mod 400 = 0;
	);
	
	public getDay : () ==> nat
	getDay() == (
		return day;
	);
	
	public getMonth : () ==> nat
	getMonth() == (
		return month;
	);
	
	public getYear : () ==> nat
	getYear() == (
		return year;
	);
functions
-- TODO Define functiones here
traces
-- TODO Define Combinatorial Test Traces here
end Date