class Event
types
-- TODO Define types here
 	public String = seq of char;
values
-- TODO Define values here
instance variables
-- TODO Define instance variables here
	private name : String;
	private id : nat;
	private capacity : nat;
	private tickets : set of Ticket := {};
	static count : nat := 0;
operations
-- TODO Define operations here
	public Event : String * nat ==> Event
	Event(n, c) == (
		name := n; 
		capacity := c; 
		id := count; 
		count := count + 1;  
		return self;
	)
	pre count >= 0
	post name = n and capacity = c and tickets = {};
	
	public addTicket : Ticket ==> ()
	addTicket(t) == (
		tickets := tickets union {t};
		capacity := capacity - 1;
	)
	pre card tickets < capacity
	post tickets = tickets~ union {t};	
	
--	public removeTicket : nat ==> ()
--	removeTicket(i) == (
--		for all ticket in set tickets do
--			if ticket.getID() = i
--			then 
--				tickets := tickets \ {ticket};
--				return;
--	);
	
	public getID : () ==> nat
	getID()==(
		return id;
	);
	
	public getName : () ==> String
	getName()==(
		return name;
	);
	
	public getCapacity : () ==> nat
	getCapacity()==(
		return capacity;
	);
	
	
	public getTickets : () ==> set of Ticket
	getTickets() == (
		return tickets;
	);
	
functions
-- TODO Define functiones here
traces
-- TODO Define Combinatorial Test Traces here
end Event