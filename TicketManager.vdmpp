class TicketManager
types
-- TODO Define types here
values
-- TODO Define values here
instance variables
-- TODO Define instance variables here
	private tickets : map nat to Ticket := {|->};
operations
-- TODO Define operations here
	public TicketManager : map nat to Ticket ==> TicketManager
	TicketManager(ts) == (
		tickets := ts
		; return self;
	)
	post tickets = ts;
	
	public pure getTickets : () ==> map nat to Ticket
	getTickets() == (
		return tickets;
	);
	
	public pure getTicket : nat ==> Ticket
	getTicket (i) == (
		return tickets(i);
	)
	pre i in set dom tickets;
	
	public addTicket : Ticket ==> ()
	addTicket(ticket) == (
		tickets := tickets ++ {ticket.getID() |-> ticket}
	)
	pre ticket.getID() not in set dom tickets
	post tickets = tickets~ ++ {ticket.getID() |-> ticket};
	
	public removeTicket : nat ==> ()
	removeTicket(i) == (
		tickets:= {i} <-: tickets; 
	)
	pre i in set dom tickets
	post tickets = {i} <-: tickets; 
	
	
functions
-- TODO Define functiones here
traces
-- TODO Define Combinatorial Test Traces here
end TicketManager